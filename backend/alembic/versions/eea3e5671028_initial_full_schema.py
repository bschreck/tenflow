"""initial full schema

Revision ID: eea3e5671028
Revises:
Create Date: 2025-08-10 20:07:23.454251

"""

from collections.abc import Sequence

from alembic import op
import sqlalchemy as sa


import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'eea3e5671028'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'compliance_scores',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('week_start', sa.Date(), nullable=False),
        sa.Column('workout_compliance', sa.Numeric(), nullable=True),
        sa.Column('intensity_compliance', sa.Numeric(), nullable=True),
        sa.Column('recovery_compliance', sa.Numeric(), nullable=True),
        sa.Column('overall_compliance', sa.Numeric(), nullable=True),
        sa.Column('activities_prescribed', sa.Integer(), nullable=True),
        sa.Column('activities_completed', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_compliance_scores_user_id'), 'compliance_scores', ['user_id'], unique=False)
    op.create_table(
        'profiles',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_profiles_user_id'), 'profiles', ['user_id'], unique=True)
    op.create_table(
        'strava_connections',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('strava_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('expires_at', sa.DateTime(), nullable=False),
        sa.Column('athlete_data', sa.JSON(), nullable=True),
        sa.Column('connected_at', sa.DateTime(), nullable=False),
        sa.Column('last_sync', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_strava_connections_user_id'), 'strava_connections', ['user_id'], unique=True)
    op.create_table(
        'subscribers',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('stripe_customer_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('subscribed', sa.Boolean(), nullable=True),
        sa.Column('subscription_tier', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('subscription_end', sa.DateTime(), nullable=True),
        sa.Column('stripe_subscription_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_subscribers_user_id'), 'subscribers', ['user_id'], unique=True)
    op.create_table(
        'training_activities',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('strava_activity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('activity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('prescribed_workout', sa.JSON(), nullable=True),
        sa.Column('actual_workout', sa.JSON(), nullable=True),
        sa.Column('compliance_score', sa.Numeric(), nullable=True),
        sa.Column('distance', sa.Numeric(), nullable=True),
        sa.Column('moving_time', sa.Integer(), nullable=True),
        sa.Column('elapsed_time', sa.Integer(), nullable=True),
        sa.Column('total_elevation_gain', sa.Numeric(), nullable=True),
        sa.Column('start_date', sa.DateTime(), nullable=False),
        sa.Column('average_heartrate', sa.Integer(), nullable=True),
        sa.Column('max_heartrate', sa.Integer(), nullable=True),
        sa.Column('rpe_prescribed', sa.Integer(), nullable=True),
        sa.Column('rpe_actual', sa.Integer(), nullable=True),
        sa.Column('activity_data', sa.JSON(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_training_activities_user_id'), 'training_activities', ['user_id'], unique=False)
    op.create_table(
        'training_plans',
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('goal', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('plan_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('duration_weeks', sa.Integer(), nullable=False),
        sa.Column('fitness_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('weekly_distance_base', sa.Numeric(), nullable=False),
        sa.Column('weekly_distance_peak', sa.Numeric(), nullable=False),
        sa.Column('training_days_per_week', sa.Integer(), nullable=False),
        sa.Column('plan_data', sa.JSON(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user',
        sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table(
        'prescribed_workouts',
        sa.Column('training_plan_id', sa.Uuid(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('workout_date', sa.Date(), nullable=False),
        sa.Column('workout_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column('distance', sa.Numeric(), nullable=True),
        sa.Column('duration_minutes', sa.Integer(), nullable=True),
        sa.Column('intensity_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('rpe_target', sa.Integer(), nullable=True),
        sa.Column('workout_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column('workout_data', sa.JSON(), nullable=True),
        sa.Column('is_completed', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ['training_plan_id'],
            ['training_plans.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('prescribed_workouts')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('training_plans')
    op.drop_index(op.f('ix_training_activities_user_id'), table_name='training_activities')
    op.drop_table('training_activities')
    op.drop_index(op.f('ix_subscribers_user_id'), table_name='subscribers')
    op.drop_table('subscribers')
    op.drop_index(op.f('ix_strava_connections_user_id'), table_name='strava_connections')
    op.drop_table('strava_connections')
    op.drop_index(op.f('ix_profiles_user_id'), table_name='profiles')
    op.drop_table('profiles')
    op.drop_index(op.f('ix_compliance_scores_user_id'), table_name='compliance_scores')
    op.drop_table('compliance_scores')
    # ### end Alembic commands ###
